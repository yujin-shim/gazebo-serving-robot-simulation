controller_frequency: 5.0
recovery_behaviour_enabled: true

# Global Planner
NavfnROS:
  allow_unknown: true # 알려지지 않은 공간을 통과하는 경로를 생성할지 여부를 지정합니다.
  default_tolerance: 0.1 # 플래너에 대한 목표점의 허용 오차를 지정합니다.
  #planner_window_x: 0.0 # 큰 코스트맵에서 NavFn을 작은 창에서 동작하도록 제한할때 창의x 크기를 지정합니다. (double, 기본값: 0.0)
  #planner_window_y: 0.0 # 큰 코스트맵에서 NavFn을 작은 창에서 동작하도록 제한할때 창의y 크기를 지정합니다. (double, 기본값: 0.0)
  #visualize_potential: false # navfn에 의해 계산된 잠재 영역을 PointCloud2를 통해 시각화할지 여부를 지정합니다. (bool, 기본값: false)

CarrotPlannerROS:
  # Robot Configuration Parameters
  step_size: 0.05 # 로봇과 사용자가 지정한 목표 지점 사이의 벡터를 따라 뒤로 이동하는 단계 크기를 미터 단위로 지정합니다. 이 값은 로봇이 유효한 목표 지점을 찾을 때 사용됩니다.
  min_dist_from_robot: 1.0 # 로봇으로부터의 최소 거리를 미터 단위로 지정합니다. 최소 거리를 유지하면서 로봇이 다가갈 수 있는 목표 지점을 결정하는 데 사용됩니다.


# Local Planner
TrajectoryPlannerROS:
  # Robot Configuration Parameters
  acc_lim_x: 2.5 
  acc_lim_theta:  3.2

  max_vel_x: 1.0
  min_vel_x: 0.0

  max_vel_theta: 1.0
  min_vel_theta: -1.0
  min_in_place_vel_theta: 0.2

  holonomic_robot: false # 로봇이 홀로노믹(모든 방향으로 움직일 수 있는)인지 여부를 설정합니다.
  escape_vel: -0.1 # 회피 동작을 수행하는 속도를 설정합니다.

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.1 # 목표 지점의 각도 허용 오차를 설정합니다.
  xy_goal_tolerance: 0.2 # 목표 지점의 x, y 좌표 허용 오차를 설정합니다.
  latch_xy_goal_tolerance: false # xy_goal_tolerance을 유지할지 여부를 설정합니다.

  # Forward Simulation Parameters
  sim_time: 2.0 # 전방 시뮬레이션에 사용되는 시간을 설정합니다.
  sim_granularity: 0.02 # 전방 시뮬레이션의 그래니유러티(이동 거리 간격)를 설정합니다.
  angular_sim_granularity: 0.02 # 전방 시뮬레이션의 각도 간격을 설정합니다.
  vx_samples: 6 #전방 시뮬레이션에 사용되는 선형 및 각도 샘플의 개수를 설정합니다.
  vtheta_samples: 20 #제어 주기를 설정합니다.
  controller_frequency: 20.0

  # Trajectory scoring parameters
  meter_scoring: true # gdist_scale 및 pdist_scale 매개변수가 미터 단위인지 셀 단위인지 지정합니다.
  occdist_scale:  0.1 # 장애물 회피에 대한 가중치를 설정합니다. default 0.01
  pdist_scale: 0.75  # 주어진 경로에 가까이 유지하는 가중치를 설정합니다. default 0.6
  gdist_scale: 1.0 # 로컬 목표에 도달하기 위한 가중치를 설정합니다. default 0.8

  heading_lookahead: 0.325  # 장애물을 피하는데 사용되는 회전 경로에서 앞으로 얼마나 멀리 볼 것인지 설정합니다.
  heading_scoring: false  # 로봇의 경로와의 각도나 경로로부터의 거리를 기준으로 점수를 매길지 여부를 설정합니다.
  heading_scoring_timestep: 0.8 # 헤딩 점수링에 사용되는 시간 간격을 설정합니다. (double, default: 0.8)
  dwa: true # Dynamic Window Approach (DWA)를 사용할지 여부를 설정합니다.
  simple_attractor: false # 간단한 어트랙터를 사용할지 여부를 설정합니다.
  publish_cost_grid_pc: true # 비용 그리드 포인트 클라우드를 게시할지 여부를 설정합니다. 

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.25 #로봇이 오실레이션하는 것으로 판단되기 전에 이동해야 하는 거리를 설정합니다. (double, default: 0.05)
  escape_reset_dist: 0.1 # 이동 거리가 오실레이션을 해결하는 데 필요한 거리보다 작아지면 오실레이션 플래그를 리셋합니다.
  escape_reset_theta: 0.1 # 각도가 오실레이션을 해결하는 데 필요한 각도보다 작아지면 오실레이션 플래그를 리셋합니다.
  # 오실레이션이란, 로봇이 한 곳에 갇혀있는 것처럼 보이면서 이동하지 못하거나 반복적인 운동을 하는 현상을 말합니다.

DWAPlannerROS:
  # Robot configuration parameters  
  acc_lim_x: 2.5
  acc_lim_y: 0
  acc_lim_th: 3.2

  max_vel_x: 0.5
  min_vel_x: 0.0
  max_vel_y: 0
  min_vel_y: 0

  max_vel_trans: 0.5
  min_vel_trans: 0.1
  max_vel_theta: 1.0
  min_vel_theta: 0.2

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.1 # 목표 지점의 각도 허용 오차를 설정합니다.
  xy_goal_tolerance: 0.2 # 목표 지점의 x, y 좌표 허용 오차를 설정합니다.
  latch_xy_goal_tolerance: false # xy_goal_tolerance을 유지할지 여부를 설정합니다.

  # Forward Simulation Parameters
  sim_time: 2.0
  sim_granularity: 0.02
  vx_samples: 6
  vy_samples: 0
  vtheta_samples: 20
  penalize_negative_x: true

  # Trajectory scoring parameters
  path_distance_bias: 32.0 # 경로에 가까이 유지하는 데 대한 가중치를 설정합니다.
  goal_distance_bias: 24.0 # 목표 지점에 도달하려는 데 대한 가중치를 설정하며, 속도를 제어합니다.
  occdist_scale: 0.01 # 장애물 회피에 대한 가중치를 설정합니다.
  forward_point_distance: 0.325 # 원점(center point)에서 추가 점수 지점을 배치할 거리를 설정합니다.
  stop_time_buffer: 0.2  # 로봇이 충돌을 피하기 위해 경로가 유효한 것으로 간주되기 전에 멈추어야 하는 시간을 설정합니다.
  scaling_speed: 0.25 # 로봇의 풋프린트(footprint) 크기를 조정하기 시작하는 속도를 설정합니다.
  max_scaling_factor: 0.2 #  풋프린트 크기를 조정하는 최대 비율을 설정합니다.

  # Oscillation Prevention Parameters
  oscillation_reset_dist: 0.25 #오실레이션 플래그를 리셋하기 전에 로봇이 이동해야 하는 거리를 설정합니다. (double, default: 0.05)
  # 오실레이션이란, 로봇이 한 곳에 갇혀있는 것처럼 보이면서 이동하지 못하거나 반복적인 운동을 하는 현상을 말합니다.

EBandPlannerROS:
  # Robot Configuration Parameters
  max_vel_lin: 0.75
  min_vel_lin: 0.1
  max_vel_th: 1.0
  min_vel_th: 0.0

  max_translational_acceleration: 0.5 # 최대 선형 가속도입니다.
  max_rotational_acceleration: 1.5 # 최대 각 가속도입니다.

  min_in_place_vel_th: 0.0 # 최소 제자리 회전 각속도입니다.
  in_place_trans_vel: 0.0 # 최소 제자리 이동 선형 속도입니다.

  # Goal Tolerance Parameters
  yaw_goal_tolerance: 0.05
  xy_goal_tolerance: 0.1
  rot_stopped_vel: 0.01 # 로봇이 한계 사이클이나 락을 피하기 위해 멈춰야 하는 각속도의 하한값입니다.
  trans_stopped_vel: 0.01 # 로봇이 한계 사이클이나 락을 피하기 위해 멈춰야 하는 선형 속도의 하한값입니다.

  # Trajectory Controller Parameters
  k_prop: 4.0 # PID 컨트롤러의 P 게인입니다.
  k_damp: 3.5 # PID 컨트롤러의 D 게인입니다.
  Ctrl_Rate: 10.0 # 컨트롤 주기입니다.
  virtual_mass: 0.75 # 가상 질량입니다.
  rotation_correction_threshold: 0.5 # 회전 보정 임계값입니다.
  differential_drive: True # 미분 구동 모드를 사용할지 여부를 나타냅니다.
  bubble_velocity_multiplier: 2.0 # 버블 반지름의 배수입니다.
  rotation_threshold_multiplier: 1.0 # 회전 임계값의 배수입니다.
  disallow_hysteresis: False # 허스테리스를 피하기 위해 목표에 더 가까이 가려고 시도할지 여부를 나타냅니다.
  
  #Elastic Band Parameters
  eband_min_relative_overlap: 0.7 # 연속된 버블 사이의 연결성을 나타내는 최소 거리입니다.
  eband_tiny_bubble_distance: 0.01 # 작은 버블 거리와 관련된 버블 기하학적 제한입니다.
  eband_tiny_bubble_expansion: 0.01 # 작은 버블 확장과 관련된 버블 기하학적 제한입니다.
  eband_internal_force_gain: 1.0 # 연속된 버블 사이를 늘이려는 내부 힘의 강도입니다.
  eband_external_force_gain: 2.0 # 장애물에서 버블을 멀리 이동하려는 외부 힘의 강도입니다.
  num_iterations_eband_optimization: 3 # eband 최적화를 위한 반복 횟수입니다.
  eband_equilibrium_approx_max_recursion_depth: 4 # 내부 힘과 외부 힘 사이의 균형에 도달하기 위한 최대 재귀 깊이입니다.
  eband_equilibrium_relative_overshoot: 0.75 # 최대 상대적 균형 초과량입니다.
  eband_significant_force_lower_bound: 0.15 # 계산에 사용되는 유의미한 힘의 최소 크기입니다.
  costmap_weight: 10.0 # 장애물까지의 거리 계산에 사용되는 코스트맵 가중치입니다.




