<?xml version="1.0"?>
<robot name="turtlebot3_burger_sim" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:arg name="laser_visual" default="false"/>
  <xacro:arg name="imu_visual"   default="false"/>

  <gazebo>
    <plugin name="turtlebot3_burger_controller" filename="libgazebo_ros_diff_drive.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishWheelJointState>false</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>100</updateRate>
      <leftJoint>wheel_left_joint</leftJoint>
      <rightJoint>wheel_right_joint</rightJoint>
      <wheelSeparation>0.160</wheelSeparation>
      <wheelDiameter>0.066</wheelDiameter>
      <wheelAcceleration>1</wheelAcceleration>
      <wheelTorque>10</wheelTorque>
    </plugin>
  </gazebo>

  <gazebo reference="base_link">
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="wheel_left_link">
    <mu1>10</mu1>
    <mu2>10</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <gazebo reference="wheel_right_link">
    <mu1>10</mu1>
    <mu2>10</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/DarkGrey</material>
  </gazebo>

  <gazebo reference="caster_back_link">
    <mu1>0.0</mu1>
    <mu2>0.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo>
    <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
      <alwaysOn>true</alwaysOn>
      <bodyName>imu_link</bodyName>
      <topicName>/imu</topicName>
      <serviceName>/imu_service</serviceName>
      <gaussianNoise>0.0</gaussianNoise>
      <updateRate>100.0</updateRate>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean>0.0</mean>
            <stddev>2e-4</stddev>
            <bias_mean>0.0000075</bias_mean>
            <bias_stddev>0.0000008</bias_stddev>
          </rate>
          <accel>
            <mean>0.0</mean>
            <stddev>1.7e-2</stddev>
            <bias_mean>0.1</bias_mean>
            <bias_stddev>0.001</bias_stddev>
          </accel>
        </noise>
      </imu>
    </plugin>
  </gazebo>

  <gazebo reference="imu_link">
    <sensor type="imu" name="imu">
      <always_on>true</always_on>
      <update_rate>50</update_rate>
      <visualize>$(arg imu_visual)</visualize>
    </sensor>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="base_scan">
    <material>Gazebo/DarkGrey</material>
    <sensor type="ray" name="lds_lfcd_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>$(arg laser_visual)</visualize>
      <update_rate>1800</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>0.0</min_angle>
            <max_angle>6.28</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.120</min>
          <max>7.5</max>
          <resolution>0.015</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>base_scan</frameName>
      </plugin>
    </sensor>
  </gazebo>


  <xacro:macro name="camera" params="parent_name sensor_name origin_xyz camera_YAW">

    <link name='${sensor_name}_camera_link'>
		<visual>
			<origin xyz="0 0 0"
					rpy="0 0 0"/>
			<geometry>
                <mesh filename="package://turtlebot3_description/meshes/sensors/webcam.dae" scale="1.0 1.0 1.0"/>
			</geometry>
		</visual>
	</link>

    <joint name="${sensor_name}_camera_link_joint" type="fixed">
		<origin rpy="0 0 ${camera_YAW}" xyz="${origin_xyz}"/>
		<parent link="${parent_name}"/>
		<child link="${sensor_name}_camera_link"/>
	</joint>


    <link name="${sensor_name}_camera_link_frame">
    </link>

    <joint name="${sensor_name}_camera_frame_joint" type="fixed">
        <origin xyz="0.035 0 0" rpy="0 0 0" />
        <parent link="${sensor_name}_camera_link" />
        <child link="${sensor_name}_camera_link_frame" />
        <axis xyz="0 0 0"/>
    </joint>

    <gazebo reference="${sensor_name}_camera_link_frame">
        <sensor type="camera" name="${sensor_name}">
        <update_rate>30.0</update_rate>
        <camera name="${sensor_name}_SP">

            <pose>0 0 0 0 0 0</pose>

            <horizontal_fov>1.3962634</horizontal_fov>
            <image>
            <width>640</width>
            <height>480</height>
            <format>R8G8B8</format>
            </image>
            <clip>
                <near>0.005</near>
                <far>20.0</far>
            </clip>
        </camera>
        <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
            <alwaysOn>true</alwaysOn>
            <updateRate>0.0</updateRate>
            <cameraName>${sensor_name}/rgb</cameraName>
            <imageTopicName>image_raw</imageTopicName>
            <cameraInfoTopicName>camera_info</cameraInfoTopicName>
            <frameName>${sensor_name}_camera_link_frame</frameName>
            <hackBaseline>0.07</hackBaseline>
            <distortionK1>0.0</distortionK1>
            <distortionK2>0.0</distortionK2>
            <distortionK3>0.0</distortionK3>
            <distortionT1>0.0</distortionT1>
            <distortionT2>0.0</distortionT2>
        </plugin>
        </sensor>
    </gazebo>

  </xacro:macro>

</robot>
