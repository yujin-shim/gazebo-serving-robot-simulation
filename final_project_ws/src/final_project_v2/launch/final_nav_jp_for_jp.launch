<launch>

<!-- world and robot -->
<!-- arg for robots -->
  <arg name="x" default="-2.0"/>
  <arg name="y" default="-0.5"/>
  <arg name="z" default="0.0"/>
  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0.0"/>


  <!-- open world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find final_project_v2)/world/costa_coffee_mod_yj.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

<!-- put_robot_in_world -->
  <arg name="model" default="burger" doc="model type [burger, waffle]" />
  <param name="robot_description" command="$(find xacro)/xacro $(find final_project_v2)/urdf/turtlebot3_$(arg model).urdf.xacro" />
  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model turtlebot3_burger -x $(arg x) -y $(arg y) -z $(arg z) -R $(arg roll) -P $(arg pitch) -Y $(arg yaw) -param robot_description" />
  <node name="robot_state_publisher_turtlebot3" pkg="robot_state_publisher" type="robot_state_publisher"
      respawn="true" output="screen">
      <param name="publish_frequency" type="double" value="5.0" />
  </node>

<!-- oooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->

  <!-- setting tf from map to odom -->
  <node pkg="tf" type="static_transform_publisher" name="map_to_odom_publisher"
  args="2.0 0.5 0 0 0 0 map odom 30" />

  <!-- serving static map -->
  <node pkg="map_server" type="map_server" name="map_server" args="$(find final_project_v2)/map/final_map.yaml"/>
  <!-- AMCL.launch.xml -->
  <include file="$(find final_project_v2)/config/amcl.launch.xml" />
  <!-- launch rviz -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find final_project)/rviz/final.rviz"/>

<!-- move_base -->
  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="odom_topic" default="odom" />
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <param name="base_global_planner" value="navfn/NavfnROS" />

    <rosparam file="$(find final_project_v2)/param/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find final_project_v2)/param/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find final_project_v2)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find final_project_v2)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find final_project_v2)/param/my_move_base_params.yaml" command="load" />
    <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
    <remap from="odom" to="$(arg odom_topic)"/>
  </node>

<!-- waypoint ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo -->
  <env name="ROSCONSOLE_FORMAT" value="[${severity}][${thread}][${node}/${function}:${line}]: ${message}"/>
  <arg name="waypoints_topic" default="my_t3_waypoints"/>

  <node pkg='final_project_v2' type='custom_yj.py' name="custom_follow_waypoints"
  output="screen" clear_params="true">
      <param name="goal_frame_id" value="odom"/>
      <param name="custom_waypoints_topic" value="$(arg waypoints_topic)"/>
  </node>

  <node pkg='final_project_v2' type='waypoint_yj.py' name="moving_to_waypoints"/>
</launch>
